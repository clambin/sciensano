// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	context "context"

	apiclient "github.com/clambin/sciensano/apiclient"

	mock "github.com/stretchr/testify/mock"
)

// Getter is an autogenerated mock type for the Getter type
type Getter struct {
	mock.Mock
}

// GetCases provides a mock function with given fields: ctx
func (_m *Getter) GetCases(ctx context.Context) ([]apiclient.APIResponse, error) {
	ret := _m.Called(ctx)

	var r0 []apiclient.APIResponse
	if rf, ok := ret.Get(0).(func(context.Context) []apiclient.APIResponse); ok {
		r0 = rf(ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]apiclient.APIResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetHospitalisations provides a mock function with given fields: ctx
func (_m *Getter) GetHospitalisations(ctx context.Context) ([]apiclient.APIResponse, error) {
	ret := _m.Called(ctx)

	var r0 []apiclient.APIResponse
	if rf, ok := ret.Get(0).(func(context.Context) []apiclient.APIResponse); ok {
		r0 = rf(ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]apiclient.APIResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetMortality provides a mock function with given fields: ctx
func (_m *Getter) GetMortality(ctx context.Context) ([]apiclient.APIResponse, error) {
	ret := _m.Called(ctx)

	var r0 []apiclient.APIResponse
	if rf, ok := ret.Get(0).(func(context.Context) []apiclient.APIResponse); ok {
		r0 = rf(ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]apiclient.APIResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetTestResults provides a mock function with given fields: ctx
func (_m *Getter) GetTestResults(ctx context.Context) ([]apiclient.APIResponse, error) {
	ret := _m.Called(ctx)

	var r0 []apiclient.APIResponse
	if rf, ok := ret.Get(0).(func(context.Context) []apiclient.APIResponse); ok {
		r0 = rf(ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]apiclient.APIResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetVaccinations provides a mock function with given fields: ctx
func (_m *Getter) GetVaccinations(ctx context.Context) ([]apiclient.APIResponse, error) {
	ret := _m.Called(ctx)

	var r0 []apiclient.APIResponse
	if rf, ok := ret.Get(0).(func(context.Context) []apiclient.APIResponse); ok {
		r0 = rf(ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]apiclient.APIResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
