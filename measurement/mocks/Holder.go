// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	context "context"

	measurement "github.com/clambin/sciensano/measurement"
	mock "github.com/stretchr/testify/mock"

	time "time"
)

// Holder is an autogenerated mock type for the Holder type
type Holder struct {
	mock.Mock
}

// AutoRefresh provides a mock function with given fields: ctx, interval
func (_m *Holder) AutoRefresh(ctx context.Context, interval time.Duration) {
	_m.Called(ctx, interval)
}

// Get provides a mock function with given fields: name
func (_m *Holder) Get(name string) ([]measurement.Measurement, bool) {
	ret := _m.Called(name)

	var r0 []measurement.Measurement
	if rf, ok := ret.Get(0).(func(string) []measurement.Measurement); ok {
		r0 = rf(name)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]measurement.Measurement)
		}
	}

	var r1 bool
	if rf, ok := ret.Get(1).(func(string) bool); ok {
		r1 = rf(name)
	} else {
		r1 = ret.Get(1).(bool)
	}

	return r0, r1
}

// Refresh provides a mock function with given fields: ctx
func (_m *Holder) Refresh(ctx context.Context) {
	_m.Called(ctx)
}
